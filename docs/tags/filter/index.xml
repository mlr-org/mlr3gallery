<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>filter on mlr3 gallery</title>
    <link>/tags/filter/</link>
    <description>Recent content in filter on mlr3 gallery</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 11 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/filter/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>mlr3pipelines tutorial - german credit</title>
      <link>/basics_pipelines_german_credit/</link>
      <pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/basics_pipelines_german_credit/</guid>
      <description>Intro This is the second part in a serial of tutorials. The other parts of this series can be found here: * Part I * Part III
In this tutorial we will continue working with the German Credit Dataset. We already used different Learners on it and tried to optimize their hyperparameters. Now we will
 preprocess the data as an integrated step of the model fitting process tune the preprocessing parameters use multiple Learners in an ensemble model see some techniques that make Learners able to tackle challenging datasets that they could not handle otherwise.</description>
    </item>
    
    <item>
      <title>mlr3tuning tutorial - german credit</title>
      <link>/basics_tuning_german_credit/</link>
      <pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/basics_tuning_german_credit/</guid>
      <description>Intro This is the third part in a serial of tutorials. The other parts of this series can be found here: * Part I * Part II
In this case we will continue working with the German Credit Dataset. Yesterday we peeked into the data set by using and comparing some learners with ther default parameters. We will now see how to:
 Tune hyperparameters for a given problem Perform nested resampling Adjust decision thresholds   Prerequisites We expect you have installed all packages from day 1.</description>
    </item>
    
    <item>
      <title>Select uncorrelated features</title>
      <link>/select_uncorrelated_features/</link>
      <pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/select_uncorrelated_features/</guid>
      <description>The following example describes a situation where we aim to remove correlated features. This in essence means, that we drop features until no features have a correlation higher then a given cutoff. This is often useful when we for example want to use linear models.
Prerequisites This tutorial assumes familiarity with the basics of mlr3pipelines. Consult the mlr3book if some aspects are not fully understandable. Additionally, we compare different cutoff values via tuning using the mlr3tuning package.</description>
    </item>
    
  </channel>
</rss>